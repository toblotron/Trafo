/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TrafoApplication;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import org.jpl7.Atom;
import org.jpl7.Compound;
import org.jpl7.JPL;
import org.jpl7.Query;
import org.jpl7.Term;
import org.jpl7.Variable;
/**
 *
 * @author Torbjörn
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        initializeTrafo();
        rootNode = new DefaultMutableTreeNode("New Root Node");
        DefaultTreeModel treeModel = new DefaultTreeModel(rootNode);
        treeModel.addTreeModelListener(new MyTreeModelListener());
        
    }

    public DefaultTreeModel theTreeModel = null;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextRule = new javax.swing.JTextField();
        dynamicTree1 = new TrafoApplication.DynamicTree();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTargetText = new javax.swing.JEditorPane();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 608));

        jToolBar1.setRollover(true);

        jButton1.setText("Test");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setText("Capture");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton3.setText("Load rules");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jLabel1.setText("Capture rule");

        jTextRule.setText("verb");
        jTextRule.setToolTipText("");
        jTextRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextRuleActionPerformed(evt);
            }
        });
        jTextRule.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextRuleKeyPressed(evt);
            }
        });

        jLabel2.setText("Captured tree");

        jLabel3.setText("Target text");

        jTargetText.setText("ABcat -- DOGdog alladin");
        jScrollPane1.setViewportView(jTargetText);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dynamicTree1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextRule))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextRule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dynamicTree1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Query.hasSolution("use_module(library(jpl))"); // only because we call e.g. jpl_pl_syntax/1 below
        Term swi = Query.oneSolution("current_prolog_flag(version_data,Swi)").get("Swi");
        System.out.println("swipl.version = " + swi.arg(1) + "." + swi.arg(2) + "." + swi.arg(3));
        System.out.println("swipl.syntax = " + Query.oneSolution("jpl_pl_syntax(Syntax)").get("Syntax"));
        System.out.println("swipl.home = " + Query.oneSolution("current_prolog_flag(home,Home)").get("Home").name());
        System.out.println("jpl.jar = " + JPL.version_string());
        System.out.println("jpl.dll = " + org.jpl7.fli.Prolog.get_c_lib_version());
        System.out.println("jpl.pl = " + Query.oneSolution("jpl_pl_lib_version(V)").get("V").name());// TODO add your handling code here:
        
   
        
        String p1Name = new String("Parent 1");
        String p2Name = new String("Parent 2");
        String c1Name = new String("Child 1");
        String c2Name = new String("Child 2");
 
        DefaultMutableTreeNode p1, p2;
 
        p1 = dynamicTree1.addObject(null, p1Name);
        p2 = dynamicTree1.addObject(null, p2Name);
 
        dynamicTree1.addObject(p1, c1Name);
        dynamicTree1.addObject(p1, c2Name);
 
        dynamicTree1.addObject(p2, c1Name);
        dynamicTree1.addObject(p2, c2Name);

        
    }//GEN-LAST:event_jButton1ActionPerformed

    DefaultMutableTreeNode rootNode = null;
    
    // load engine files
    private void initializeTrafo()
    {
        String path = "";
        try{
            path = new File("C:\\Users\\Torbjörn\\Documents\\Prolog").getCanonicalPath(); //".").getCanonicalPath();
        }
        catch(Exception ex){}
        
        Query q1 = 
            new Query( 
                "consult", 
                new Term[] {new Atom(path + "\\trafo.pl")} 
            );

        try{
            q1.open();
            q1.getSolution();
        }catch(Exception ex2){
            System.out.println(ex2.getMessage());
        }
    }
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRuleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextRuleActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // call trafo with target rule and text
        // retreive captured tree-structure
        
        CallTrawl();       
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void CallTrawl()
    {
        Variable Tree = new Variable("Tree");
        Compound callTrawl = new Compound(
            "call_trawl",
                new Term[]{
                    new Compound(":",new Term[]{
                        new Atom("target"),
                        new Atom(jTextRule.getText())
                    }),
                    new Atom(jTargetText.getText()),
                    Tree
                }
        );
        Query q2 = new Query(callTrawl);
        
        Term treeList = null;
        try{
            treeList = q2.oneSolution().get("Tree");
            dynamicTree1.clear();
            ShowTree(treeList, dynamicTree1.rootNode);
            dynamicTree1.tree.expandPath(new TreePath(dynamicTree1.rootNode.getPath()));
            
        }catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    }
    
    private void jTextRuleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextRuleKeyPressed
        if(evt.getKeyChar() == '\n')
        {
            CallTrawl();
        }
    }//GEN-LAST:event_jTextRuleKeyPressed

    
    public void ShowTree(Term inTerm, DefaultMutableTreeNode parent)
    {
        Term currTerm = inTerm;
        if(currTerm.name().equals("[|]"))
        {
            // list-part
            ShowTree(currTerm.arg(1), parent);
            ShowTree(currTerm.arg(2), parent);
        }
        else if(currTerm.name().equals(":"))
        {
            // tagged terminal
            ShowNode(currTerm,parent);
        }
        else if(!currTerm.name().equals("[]"))
        {
            // un-tagged terminal atoms (not empty lists)
            DefaultMutableTreeNode newNode;
            newNode = dynamicTree1.addObject(parent, "'" + currTerm.name() + "'");
        }
    }
    
    public void ShowNode(Term nodeTerm, DefaultMutableTreeNode parent)
    {
        DefaultMutableTreeNode newNode;
                
        if(nodeTerm.arg(2).name().equals("[|]"))
        {
            newNode = dynamicTree1.addObject(parent, nodeTerm.arg(1).name() + ":");
            
            //dynamicTree1.addObject(parent,newNode);
            ShowTree(nodeTerm.arg(2),newNode);
            dynamicTree1.tree.expandPath(new TreePath(newNode.getPath()));
        }
        else
        {
            newNode = dynamicTree1.addObject(parent, nodeTerm.arg(1).name() + ":" + nodeTerm.arg(2).name());
            //dynamicTree1.addObject(parent,newNode);
        }
        /*
        String p1Name = new String("Parent 1");
        String p2Name = new String("Parent 2");
        String c1Name = new String("Child 1");
        String c2Name = new String("Child 2");
 
        DefaultMutableTreeNode p1, p2;
 
        p1 = dynamicTree1.addObject(null, p1Name);
        p2 = dynamicTree1.addObject(null, p2Name);
 
        dynamicTree1.addObject(p1, c1Name);
        dynamicTree1.addObject(p1, c2Name);
 
        dynamicTree1.addObject(p2, c1Name);
        dynamicTree1.addObject(p2, c2Name);
        */
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private TrafoApplication.DynamicTree dynamicTree1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane jTargetText;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextRule;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
